Name:                snappy-bureaucracy
Version:             0.1
Synopsis:            Snap Webservice Evaluation for Bureaucracy
Description:         Test project to evaluate how Snap will perform as a RESTful web service.
License:             AllRightsReserved
Author:              Laurence Rouesnel
Maintainer:          laurence@rouesnel.com
Stability:           Experimental
Category:            Web
Build-type:          Simple
Cabal-version:       >= 1.18

Flag development
  Description: Whether to build the server in development (interpreted) mode
  Default: False

Library
  default-language: Haskell2010
  hs-source-dirs: src
  exposed-modules: 
    Bureaucracy.Application,
    Bureaucracy.Site, 
    Bureaucracy.Thrift.LanguageThrift
  other-modules: 
    Bureaucracy.Thrift.CompactThrift,
    Bureaucracy.Thrift.VarInt

  Build-depends:
    base                      >= 4.4     && < 5,
    lens                      >= 3.7.6   && < 4.5,
    binary                    >= 0.7.1   && < 0.8,
    bytestring                >= 0.9.1   && < 0.11,
    containers                >= 0.5     && < 0.6,
    haskakafka                >= 0.2     && < 0.3,
    heist                     >= 0.14    && < 0.15,
    interpolatedstring-perl6  >= 0.9     && < 0.10,
    MonadCatchIO-transformers >= 0.2.1   && < 0.4,
    mtl                       >= 2       && < 3,
    snap                      >= 0.13    && < 0.14,
    snap-core                 >= 0.9     && < 0.10,
    text                      >= 0.11    && < 1.3,
    time                      >= 1.1     && < 1.5,
    thrift                    >= 1.0     && < 1.1,
    xmlhtml                   >= 0.1     && < 0.3,

    hashable                  >= 1.2     && < 1.3,
    unordered-containers      == 0.2.5.0,
    vector                    >= 0.10    && < 0.11,
    attoparsec                >= 0.12    && < 0.13,

    trifecta                  >= 1.5.1   && < 1.6,
    parsers                   >= 0.12    && < 0.13,
    charset                   >= 0.3     && < 0.4

  if flag(development)
    cpp-options: -DDEVELOPMENT
    ghc-options: -threaded -w
  else
    ghc-options: -threaded -Wall -fwarn-tabs -funbox-strict-fields -O2
                 -fno-warn-orphans -fno-warn-unused-do-bind -rtsopts -optc-O3

Executable snappy-bureaucracy-app
  default-language: Haskell2010
  hs-source-dirs: src-exec
  main-is: Main.hs

  Build-depends: 
    snappy-bureaucracy,
    base                      >= 4.4     && < 5,
    snap                      >= 0.13    && < 0.14,
    snap-core                 >= 0.9     && < 0.10,
    snap-server               >= 0.9     && < 0.10,
    snap-loader-static        >= 0.9     && < 0.10,
    text                      >= 0.11    && < 1.3

  if flag(development)
    Build-depends:
      snap-loader-dynamic == 0.10.*
    cpp-options: -DDEVELOPMENT
    -- In development mode, speed is already going to suffer, so skip
    -- the fancy optimization flags.  Additionally, disable all
    -- warnings.  The hint library doesn't give an option to execute
    -- compiled code when there were also warnings, so disabling
    -- warnings allows quicker workflow.
    ghc-options: -threaded -w
  else
    ghc-options: -threaded -Wall -fwarn-tabs -funbox-strict-fields -O2
                 -fno-warn-orphans -fno-warn-unused-do-bind -rtsopts -optc-O3

test-suite test
  default-language: Haskell2010
  type: exitcode-stdio-1.0
  hs-source-dirs: tests
  main-is: test.hs
  build-depends:
    base                      >= 4.4     && < 5,
    tasty                     >= 0.10.0  && < 0.11,
    tasty-hunit               >= 0.9.0   && < 0.10,
    trifecta                  >= 1.5.1   && < 1.6,
    parsers                   >= 0.12    && < 0.13,
    charset                   >= 0.3     && < 0.4,
    snappy-bureaucracy
